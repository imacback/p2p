<?xml version="1.0" encoding="UTF-8"?>
	<!--
		Copyright 2010 The myBatis Team Licensed under the Apache License,
		Version 2.0 (the "License"); you may not use this file except in
		compliance with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd 
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc    
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!--  
     <context:annotation-config/>
    -->

    <context:property-placeholder location="classpath:application.properties"/>
    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--&lt;!&ndash; 读取配置文件 &ndash;&gt;-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:/config/application_${spring.profiles.active}.properties</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="fileEncoding" value="utf-8" />-->
    <!--</bean>-->

	<mvc:annotation-driven/>
	<!-- 需要引入tx的命名空间 -->
    <tx:annotation-driven transaction-manager="coreTransactionManager" />
    
    <!--  定时器开关  开始-->
    <task:annotation-driven/>
	<!--  定时器开关  结束-->
    
        <!-- 注解扫描包   -->
    <context:component-scan base-package="com.abjr.p2p.controller"></context:component-scan>
    <context:component-scan base-package="com.abjr.p2p.dao"></context:component-scan>
    <context:component-scan base-package="com.abjr.p2p.service"></context:component-scan>
   
     
     <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>-->
     <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->

	
	<bean id="coreDataSource" class="${coreDataSource.class}">
		<property name="driverClass" value="${coreDataSource.driverClass}"></property>
		<property name="jdbcUrl" value="${coreDataSource.jdbcUrl}"></property>
		<property name="user" value="${coreDataSource.user}"></property>
		<property name="password" value="${coreDataSource.password}"></property>
		<property name="maxPoolSize" value="${coreDataSource.maxPoolSize}"></property>
		<property name="minPoolSize" value="${coreDataSource.minPoolSize}"></property>
		<property name="acquireIncrement" value="${coreDataSource.acquireIncrement}"></property>
    	<property name="maxIdleTime" value="${coreDataSource.maxIdleTime}"/>
    	<property name="testConnectionOnCheckin" value="${coreDataSource.testConnectionOnCheckin}"/>
    	<property name="automaticTestTable" value="${coreDataSource.automaticTestTable}"/>
    	<property name="idleConnectionTestPeriod" value="${coreDataSource.idleConnectionTestPeriod}"/>
    	<property name="checkoutTimeout" value="${coreDataSource.checkoutTimeout}"/>
	</bean>
	<!--
		define the SqlSessionFactory, notice that configLocation is not needed
		when you use MapperFactoryBean
	-->
	
	<bean id="coreSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="coreDataSource" />
		<property name="configLocation" value="WEB-INF/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/abjr/**/*.xml"></property>
	</bean>

	<bean id="coreTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="coreDataSource" />
		
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.abjr.p2p.dao" />
        <property name="sqlSessionFactoryBeanName" value="coreSqlSessionFactory"/>
    </bean>
</beans>
